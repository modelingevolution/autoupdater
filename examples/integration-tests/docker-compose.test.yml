version: '3.8'

services:
  # AutoUpdater service
  autoupdater:
    build: 
      context: ../../
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./test-repos:/data/repos
      - ./ssh-keys:/data/ssh:ro
      - ./autoupdater-config/appsettings.test.json:/data/appsettings.json:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/packages"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      - test-ssh-host

  # SSH Host simulator (simulates the Docker host for SSH connections)
  test-ssh-host:
    image: lscr.io/linuxserver/openssh-server:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - PUBLIC_KEY_FILE=/config/ssh_host_keys/id_rsa.pub
      - SUDO_ACCESS=true
      - PASSWORD_ACCESS=false
      - USER_NAME=deploy
    volumes:
      - ./ssh-keys/id_rsa.pub:/config/ssh_host_keys/id_rsa.pub:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./test-repos:/home/deploy/repos
    networks:
      test-network:
        aliases:
          - ssh-host
    ports:
      - "2222:2222"

  # Test project (will be deployed via docker-compose by AutoUpdater)
  # This is just for initial setup, AutoUpdater will manage it
  testproject:
    image: testproject:${TEST_VERSION:-1.0.0}
    build:
      context: ../testproject
      dockerfile: Dockerfile
      args:
        VERSION: ${TEST_VERSION:-1.0.0}
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - test-network
    profiles:
      - manual

networks:
  test-network:
    driver: bridge

volumes:
  test-repos: