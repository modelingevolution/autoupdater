@using System.ComponentModel
@using ModelingEvolution.AutoUpdater
@using ModelingEvolution.AutoUpdater.Host.Models
@implements IDisposable

<MudField Label="Current version">@GetVersionDisplay()</MudField>

@code {
    private PackageState? _state;
    [Parameter] public PackageState PackageState { get; set; } = null!;

    protected override void OnParametersSet()
    {
        if (_state == PackageState) return;

        if (_state != null)
            _state.PropertyChanged -= OnPropertyChanged;
        _state = PackageState;
        if (_state != null)
            _state.PropertyChanged += OnPropertyChanged;
    }

    private string GetVersionDisplay()
    {
        if (_state?.CurrentVersion != null)
            return _state.CurrentVersion.ToString();
        return "-";
    }

    private void OnPropertyChanged(object? sender, PropertyChangedEventArgs e)
    {
        if (e.PropertyName == nameof(PackageState.CurrentVersion))
        {
            InvokeAsync(StateHasChanged);
        }
    }

    public void Dispose()
    {
        if (_state != null)
            _state.PropertyChanged -= OnPropertyChanged;
    }
}