name: Test Results and Coverage

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  pages: write
  id-token: write
  checks: write
  pull-requests: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Test with coverage
      run: |
        dotnet test --no-build --configuration Release \
          --logger "trx;LogFileName=test-results.trx" \
          --logger "html;LogFileName=test-results.html" \
          --collect:"XPlat Code Coverage" \
          --results-directory ./TestResults
    
    - name: Generate coverage report
      run: |
        dotnet tool install --global dotnet-reportgenerator-globaltool
        reportgenerator \
          -reports:./TestResults/**/coverage.cobertura.xml \
          -targetdir:./TestResults/CoverageReport \
          -reporttypes:Html_Dark
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          ./TestResults/**/*.trx
          ./TestResults/**/*.html
          ./TestResults/CoverageReport/**
        retention-days: 30
        
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: .NET Tests
        path: './TestResults/*.trx'
        reporter: dotnet-trx
        
    - name: Prepare Jekyll site
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        mkdir -p ./docs
        
        # Create Jekyll config
        cat > ./docs/_config.yml << EOF
        title: ModelingEvolution AutoUpdater
        description: Test Results and Code Coverage
        theme: jekyll-theme-minimal
        plugins:
          - jekyll-relative-links
        EOF
        
        # Create layout
        mkdir -p ./docs/_layouts
        cat > ./docs/_layouts/default.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>{{ page.title }} - {{ site.title }}</title>
          <link rel="stylesheet" href="{{ '/assets/css/style.css' | relative_url }}">
        </head>
        <body>
          <header>
            <h1>{{ site.title }}</h1>
            <p>{{ site.description }}</p>
            <nav>
              <a href="{{ '/' | relative_url }}">Home</a> |
              <a href="{{ '/coverage/' | relative_url }}">Coverage Report</a> |
              <a href="{{ '/test-results.html' | relative_url }}">Test Results</a>
            </nav>
          </header>
          <main>
            {{ content }}
          </main>
          <footer>
            <p>Generated on {{ site.time | date: "%Y-%m-%d %H:%M:%S" }}</p>
          </footer>
        </body>
        </html>
        EOF
        
        # Create index page
        cat > ./docs/index.md << EOF
        ---
        layout: default
        title: Test Results Dashboard
        ---
        
        # Test Results Dashboard
        
        ## Latest Build Status
        
        ![CI](https://github.com/modelingevolution/autoupdater/actions/workflows/ci.yml/badge.svg)
        ![Tests](https://github.com/modelingevolution/autoupdater/actions/workflows/test-results.yml/badge.svg)
        
        ## Quick Links
        
        - [Code Coverage Report](./coverage/)
        - [Test Results](./test-results.html)
        
        ## Summary
        
        Generated on: $(date)
        
        ### Test Statistics
        - Total Tests: $(grep -o 'total="[^"]*"' ./TestResults/*.trx | head -1 | sed 's/total="//;s/"//')
        - Passed: $(grep -o 'passed="[^"]*"' ./TestResults/*.trx | head -1 | sed 's/passed="//;s/"//')
        - Failed: $(grep -o 'failed="[^"]*"' ./TestResults/*.trx | head -1 | sed 's/failed="//;s/"//')
        EOF
        
        # Copy coverage report
        cp -r ./TestResults/CoverageReport ./docs/coverage
        cp ./TestResults/*.html ./docs/ || true
        
    - name: Setup Pages
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: actions/configure-pages@v4
      
    - name: Build with Jekyll
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: actions/jekyll-build-pages@v1
      with:
        source: ./docs
        destination: ./_site
        
    - name: Upload Pages artifact
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: actions/upload-pages-artifact@v3

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4