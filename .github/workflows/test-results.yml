name: Test Results and Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Test with coverage
      run: |
        dotnet test --no-build --configuration Release \
          --logger "trx;LogFileName=test-results.trx" \
          --logger "html;LogFileName=test-results.html" \
          --collect:"XPlat Code Coverage" \
          --results-directory ./TestResults
    
    - name: Generate coverage report
      run: |
        dotnet tool install --global dotnet-reportgenerator-globaltool
        reportgenerator \
          -reports:./TestResults/**/coverage.cobertura.xml \
          -targetdir:./TestResults/CoverageReport \
          -reporttypes:Html_Dark
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          ./TestResults/**/*.trx
          ./TestResults/**/*.html
          ./TestResults/CoverageReport/**
        retention-days: 30
        
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: .NET Tests
        path: './TestResults/*.trx'
        reporter: dotnet-trx
        
    - name: Prepare GitHub Pages
      if: github.ref == 'refs/heads/main'
      run: |
        mkdir -p ./public
        cp -r ./TestResults/CoverageReport/* ./public/
        cp ./TestResults/*.html ./public/ || true
        echo "<h1>ModelingEvolution AutoUpdater Test Results</h1>" > ./public/index.html
        echo "<ul>" >> ./public/index.html
        echo "<li><a href='index.html'>Coverage Report</a></li>" >> ./public/index.html
        echo "<li><a href='test-results.html'>Test Results</a></li>" >> ./public/index.html
        echo "</ul>" >> ./public/index.html
        echo "<p>Generated on $(date)</p>" >> ./public/index.html
        
    - name: Upload Pages artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./public

  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4